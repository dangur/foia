From 0a70ee93771d57a02d6e23b88534791e7ed7c588 Mon Sep 17 00:00:00 2001
From: Grant Gaudet <greylabel@users.noreply.github.com>
Date: Thu, 5 Oct 2017 12:18:23 -0700
Subject: [PATCH] Provide better Memcached boilerplate config. (#2063)

* Update docs for APCu fix (#2027).

* Add settings to move locks to memcache (#2027).

* Add memcache config for Acquia Cloud (#2027).

* Include memcache config and adjust APCu fix include (#2027).

* Add readme for memcache integration (#2027).

* Cleanup docs and config a bit (#2027).

* Address PHPCS errors (#2027).

* Make Memcache module integration opt-in (#2027).

* Update memcache docs (#2027).
---
 readme/memcache.md        | 77 +++++++++++++++++++++++++++++++++++++++++++++++
 settings/apcu_fix.yml     |  5 +--
 settings/blt.settings.php | 12 ++++++--
 settings/memcache.yml     |  9 ++++++
 4 files changed, 98 insertions(+), 5 deletions(-)
 create mode 100644 readme/memcache.md
 create mode 100644 settings/memcache.yml

diff --git a/readme/memcache.md b/readme/memcache.md
new file mode 100644
index 000000000..e60d6d4a7
--- /dev/null
+++ b/readme/memcache.md
@@ -0,0 +1,77 @@
+# Memcache
+
+This document describes how to configure the [Memcache API and Integration](https://www.drupal.org/project/memcache) (Memcache) module for Drupal 8. The Memcache module provides an API for using Memcached and the PECL Memcache or Memcached libraries with Drupal and provides backends for Drupal's caching and locking systems. The most complete and up to date documentation is included with the module, in the [README.txt](http://cgit.drupalcode.org/memcache/tree/README.txt?h=8.x-2.x) file.
+
+Before enabling the Memcache module, it is important to understand how the Drupal 8 [Cache API](https://api.drupal.org/api/drupal/core%21core.api.php/group/cache/8.4.x) functions and the how Drupal determines which cache backend to use for a specific cache bin, see [#2754947](https://www.drupal.org/node/2754947). Note: Drupal 8 does not gracefully handle configurations where a given cache backend is set as default, but the module providing the backend is not enabled [#2766509](https://www.drupal.org/node/2766509).
+
+## Acquia Cloud
+
+[Using Memcached on Acquia Cloud](https://docs.acquia.com/cloud/performance/memcached) provides detailed information regarding how Acquia supports Memcached for its subscriptions and products, and is a good resource in general for information regarding Drupal and Memcache integrations. It is important that the settings for `memcache_key_prefix` and `memcache_servers` not be modified on Acquia Cloud.
+
+BLT treats Memcache module integration as opt-in as it can be used only in environments that have Drupal installed and the Memcache module enabled, and won't need to be reinstalled, e.g. stage and prod. The snippet below should be customized as need and added to a `settings.php` for an environment meeting these criteria.
+
+```
+if ($is_ah_env) {
+  switch ($ah_env) {
+    case 'test':
+    case 'prod':
+      if ($modules && isset($modules['module']['memcache'])) {
+        // Use Memcached extension.
+        $memcached_exists = class_exists('Memcached', FALSE);
+        if ($memcached_exists) {
+          $settings['memcache']['extension'] = 'Memcached';
+        }
+
+        // Use memcache as the default bin.
+        $settings['cache']['default'] = 'cache.backend.memcache';
+
+        // Enable stampede protection.
+        $settings['memcache']['stampede_protection'] = TRUE;
+        // Move locks to memcache.
+        $settings['container_yamls'][] = DRUPAL_ROOT . '/../vendor/acquia/blt/settings/memcache.yml';
+      }
+      break;
+  }
+}
+```
+
+If using a supported Acquia product or service, SASL authentication support in the Drupal Memcache module can be enabled by updating and placing the below in correct site-specific `settings.php` file, ideally one that is not committed to version control.
+
+```
+if ($is_ah_env) {
+  $settings['memcache']['sasl'] = [
+  'username' => 'yourSASLUsername',
+  'password' => 'yourSASLPassword',
+  ];
+  $settings['memcache']['options'] = [
+    \Memcached::OPT_BINARY_PROTOCOL => TRUE,
+  ];
+}
+```
+
+## Local Development
+
+The below has been tested with DrupalVM as configured through BLT's `blt vm` command, but should also work for most CI environments where the memcache backend is localhost on port 11211.
+
+Add the below statements to an environment's `local.settings.php` after Drupal is installed and the Memcache module is enabled.
+
+```
+// Include a unique prefix for each local Drupal installation.
+if ($is_local_env) {
+  $settings['memcache']['key_prefix'] = $site_dir;
+}
+
+// Use Memcached extension.
+$memcached_exists = class_exists('Memcached', FALSE);
+if ($memcached_exists) {
+  $settings['memcache']['extension'] = 'Memcached';
+}
+
+// Use memcache as the default bin.
+$settings['cache']['default'] = 'cache.backend.memcache';
+
+// Enable stampede protection.
+$settings['memcache']['stampede_protection'] = TRUE;
+// Move locks to memcache.
+$settings['container_yamls'][] = DRUPAL_ROOT . '/../vendor/acquia/blt/settings/memcache.yml';
+```
diff --git a/settings/apcu_fix.yml b/settings/apcu_fix.yml
index bd762cde4..57c7b867f 100644
--- a/settings/apcu_fix.yml
+++ b/settings/apcu_fix.yml
@@ -1,5 +1,6 @@
-# Added at the advice of Acquia Support to prevent APCu cache exhaustion. Can
-# be removed if memcache is used instead of APCu.
+# Added at the advice of Acquia Support to prevent APCu cache exhaustion.
+# Can be removed if memcache is used or APCu is given more memory.
+# See: https://docs.acquia.com/article/drupal-8-cache-backend
 services:
   cache.backend.chainedfast:
     class: Drupal\Core\Cache\DatabaseBackendFactory
diff --git a/settings/blt.settings.php b/settings/blt.settings.php
index 8eeb60556..a57d9e8c4 100644
--- a/settings/blt.settings.php
+++ b/settings/blt.settings.php
@@ -8,6 +8,7 @@
 use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;
 use Symfony\Component\HttpFoundation\Request;
 use Drupal\Core\DrupalKernel;
+use Drupal\Component\Utility\Bytes;
 
 /**
  * Host detection.
@@ -129,6 +130,14 @@
  * BLT includes & BLT default configuration.
  ******************************************************************************/
 
+// Prevent APCu memory exhaustion.
+// Acquia assigns 8 MB for APCu, which is only adequate for small cache pools.
+$apc_shm_size = Bytes::toInt(ini_get('apc.shm_size'));
+$apcu_fix_size = Bytes::toInt('32M');
+if ($apc_shm_size < $apcu_fix_size) {
+  $settings['container_yamls'][] = __DIR__ . '/apcu_fix.yml';
+}
+
 // Includes caching configuration.
 require __DIR__ . '/cache.settings.php';
 
@@ -141,9 +150,6 @@
 // Includes filesystem configuration.
 require __DIR__ . '/filesystem.settings.php';
 
-// Prevent APCu memory exhaustion.
-$settings['container_yamls'][] = __DIR__ . '/apcu_fix.yml';
-
 // Include simplesamlphp settings if the file exists.
 if (file_exists(__DIR__ . '/simplesamlphp.settings.php')) {
   require __DIR__ . '/simplesamlphp.settings.php';
diff --git a/settings/memcache.yml b/settings/memcache.yml
new file mode 100644
index 000000000..9293db60b
--- /dev/null
+++ b/settings/memcache.yml
@@ -0,0 +1,9 @@
+services:
+  # Replaces the default lock backend with a memcache implementation.
+  lock:
+    class: Drupal\Core\Lock\LockBackendInterface
+    factory: memcache.lock.factory:get
+  # Replaces the default persistent lock backend with a memcache implementation.
+  lock.persistent:
+    class: Drupal\Core\Lock\LockBackendInterface
+    factory: memcache.lock.factory:getPersistent
